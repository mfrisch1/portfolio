# ---- Build Stage ----
FROM node:22-alpine AS build

# Install dependencies needed for native modules and sharp/PostgreSQL
RUN apk update && apk add --no-cache \
    build-base \
    gcc \
    autoconf \
    automake \
    zlib-dev \
    libpng-dev \
    vips-dev \
    postgresql-dev \
    git \
    python3 \
    make > /dev/null 2>&1

# Enable pnpm via corepack
RUN corepack enable && corepack prepare pnpm@latest --activate

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /opt/
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --prod

ENV PATH=/opt/node_modules/.bin:$PATH

WORKDIR /opt/app
COPY . .
RUN pnpm run build

# ---- Production Stage ----
FROM node:22-alpine

# Install runtime dependencies for sharp and PostgreSQL
RUN apk add --no-cache \
    vips-dev \
    postgresql-libs

ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules

WORKDIR /opt/app
COPY --from=build /opt/app ./

ENV PATH=/opt/node_modules/.bin:$PATH

RUN chown -R node:node /opt/app
USER node

EXPOSE 1337
CMD ["pnpm", "run", "start"]

